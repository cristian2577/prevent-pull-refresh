{"version":3,"sources":["index.js"],"names":[],"mappings":"aAAA,CAAC,UAAM,CACL,GAAM,GAAW,OAAO,MAAP,EAAiB,UAAU,SAAV,CAAoB,KAApB,CAA0B,OAA1B,CAAlC,CACM,EAAU,gBAAkB,UAAS,eAD3C,CAGA,GAAI,IAAJ,EAIA,GAAI,KAAJ,CACI,IADJ,CAEI,EAAa,CAFjB,CAGI,IAHJ,CAKA,GAAI,CACE,IAAI,QAAJ,CAAa,uBAAb,CAAsC,SAAtC,CADF,GAEA,IAFA,CAIH,CAAC,QAAU,CAAE,CAEd,KACE,MAAQ,UAAS,IAAT,CAAc,KAAd,CAAoB,mBAApB,CAA0C,SAAlD,CAEA,GAAM,GAAO,SAAS,IAAT,EAAiB,SAAS,IAAvC,CACM,EAAQ,SAAS,aAAT,CAAuB,OAAvB,CADd,CAEM,6LAFN,CAYA,EAAM,IAAN,CAAa,UA9Bf,CAgCM,EAAM,UAhCZ,CAiCI,EAAM,UAAN,CAAiB,OAAjB,EAjCJ,CAmCI,EAAM,WAAN,CAAkB,SAAS,cAAT,GAAlB,CAnCJ,CAsCE,EAAK,WAAL,GAtCF,CAyCA,GAAI,CACF,iBAAiB,MAAjB,CAAyB,IAAzB,CAA+B,CAC7B,GAAI,QAAJ,EAAc,CACZ,IACD,CAH4B,CAA/B,CAKD,CAAC,QAAU,CAAE,CAEd,GAAM,GAAqB,WAAS,CAClC,EAAa,EAAM,OAAN,CAAc,CAAd,EAAiB,OAC/B,CAFD,CAIM,EAAgB,WAAS,CAC7B,GAAM,GAAS,EAAM,OAAN,CAAc,CAAd,EAAiB,OAAhC,CACM,EAAc,GADpB,CAKA,MAFA,IAEA,CAAqB,CAAd,EACR,CAXD,CAaM,EAAoB,WAAS,CACJ,CAAzB,KAAM,OAAN,CAAc,MADe,GAEjC,IAFiC,CAGjC,EAAsC,CAAvB,UAAO,WAHW,CAIlC,CAjBD,CAmBM,EAAmB,WAAS,CAChC,OACE,IADF,CAEM,IAFN,EAGI,MAAO,GAAM,cAAN,EAGZ,CA1BD,CA4BA,SAAS,gBAAT,CACE,YADF,QAGoB,CAAE,UAAF,CAHpB,CA7EA,CAmFA,SAAS,gBAAT,CAA0B,WAA1B,GAnFA,CAoFD,CAxFD,G","file":"index.min.js","sourcesContent":["(() => {\n  const isChrome = window.chrome || navigator.userAgent.match('CriOS');\n  const isTouch = 'ontouchstart' in document.documentElement;\n\n  if (!isChrome || !isTouch) {\n    return;\n  }\n\n  let supportsOverscroll = false;\n  let supportsPassive = false;\n  let lastTouchY = 0;\n  let maybePrevent = false;\n\n  try {\n    if (CSS.supports('overscroll-behavior-y', 'contain')) {\n      supportsOverscroll = true;\n    }\n  } catch (e) {}\n\n  if (supportsOverscroll) {\n    return (document.body.style.overscrollBehaviorY = 'contain');\n  } else {\n    const head = document.head || document.body;\n    const style = document.createElement('style');\n    const css = `\n      ::-webkit-scrollbar {\n        width: 5px;\n      }\n      ::-webkit-scrollbar-thumb {\n        border-radius: 5px;\n        background-color: rgba(0, 0, 0, 0.2);\n      }\n    `;\n\n    style.type = 'text/css';\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = css;\n    } else {\n      style.appendChild(document.createTextNode(css));\n    }\n\n    head.appendChild(style);\n  }\n\n  try {\n    addEventListener('test', null, {\n      get passive() {\n        supportsPassive = true;\n      },\n    });\n  } catch (e) {}\n\n  const setTouchStartPoint = event => {\n    lastTouchY = event.touches[0].clientY;\n  };\n\n  const isScrollingUp = event => {\n    const touchY = event.touches[0].clientY;\n    const touchYDelta = touchY - lastTouchY;\n\n    lastTouchY = touchY;\n\n    return touchYDelta > 0;\n  };\n\n  const touchstartHandler = event => {\n    if (event.touches.length !== 1) return;\n    setTouchStartPoint(event);\n    maybePrevent = window.pageYOffset === 0;\n  };\n\n  const touchmoveHandler = event => {\n    if (maybePrevent) {\n      maybePrevent = false;\n      if (isScrollingUp(event)) {\n        return event.preventDefault();\n      }\n    }\n  };\n\n  document.addEventListener(\n    'touchstart',\n    touchstartHandler,\n    supportsPassive ? { passive: true } : false\n  );\n\n  document.addEventListener('touchmove', touchmoveHandler);\n})();\n"]}